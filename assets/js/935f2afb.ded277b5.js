"use strict";(self.webpackChunkkx_ow_o_manual_website=self.webpackChunkkx_ow_o_manual_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction to Kwazy Xhader OwO","href":"/KwazyXhaderOwO-Manual/docs/intro","docId":"intro"},{"type":"category","label":"Global Concept","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Global concept","href":"/KwazyXhaderOwO-Manual/docs/Global-Concept/Intro","docId":"Global-Concept/Intro"},{"type":"link","label":"Reading Textures","href":"/KwazyXhaderOwO-Manual/docs/Global-Concept/Reading-Textures","docId":"Global-Concept/Reading-Textures"},{"type":"link","label":"UV Transform - Basics","href":"/KwazyXhaderOwO-Manual/docs/Global-Concept/UV-Transforms-Basic","docId":"Global-Concept/UV-Transforms-Basic"},{"type":"link","label":"UV Transform - Details","href":"/KwazyXhaderOwO-Manual/docs/Global-Concept/UV-Transforms-Details","docId":"Global-Concept/UV-Transforms-Details"},{"type":"link","label":"Color Transform","href":"/KwazyXhaderOwO-Manual/docs/Global-Concept/Color-Transform","docId":"Global-Concept/Color-Transform"}],"href":"/KwazyXhaderOwO-Manual/docs/category/global-concept"},{"type":"category","label":"Fragment Shader Part","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fragment Shader Concept","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBass-And-FowardAdd","docId":"Fragment-Shader/ForwardBass-And-FowardAdd"},{"type":"category","label":"FowardBase Pass","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Texture Layer : Albedo Layer / Main Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/Texture-Main","docId":"Fragment-Shader/ForwardBase/Texture-Main"},{"type":"link","label":"Texture Layer : Distort Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/Texture-Distort","docId":"Fragment-Shader/ForwardBase/Texture-Distort"},{"type":"link","label":"Texture Layer : Mask Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/General-Mask","docId":"Fragment-Shader/ForwardBase/General-Mask"},{"type":"link","label":"External - Fresnel","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/External-Fresnel","docId":"Fragment-Shader/ForwardBase/External-Fresnel"},{"type":"link","label":"Externel - Vector Color","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/External-VectorColor","docId":"Fragment-Shader/ForwardBase/External-VectorColor"},{"type":"link","label":"Glitter Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/Glitter","docId":"Fragment-Shader/ForwardBase/Glitter"},{"type":"link","label":"Lightmap Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardBase/Lightmap","docId":"Fragment-Shader/ForwardBase/Lightmap"}],"href":"/KwazyXhaderOwO-Manual/docs/category/fowardbase-pass"},{"type":"category","label":"FowardAdd Pass","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Runtime Light Layer","href":"/KwazyXhaderOwO-Manual/docs/Fragment-Shader/ForwardAdd/RuntimeLight","docId":"Fragment-Shader/ForwardAdd/RuntimeLight"}],"href":"/KwazyXhaderOwO-Manual/docs/category/fowardadd-pass"}],"href":"/KwazyXhaderOwO-Manual/docs/category/fragment-shader-part"},{"type":"category","label":"Vertex Shader Part","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Axis Distort","href":"/KwazyXhaderOwO-Manual/docs/Vertex-Shader/Axis-Distort","docId":"Vertex-Shader/Axis-Distort"},{"type":"link","label":"Normal Extwude / Normal Distort","href":"/KwazyXhaderOwO-Manual/docs/Vertex-Shader/Normal-Distort","docId":"Vertex-Shader/Normal-Distort"}],"href":"/KwazyXhaderOwO-Manual/docs/category/vertex-shader-part"},{"type":"link","label":"Thank you so much","href":"/KwazyXhaderOwO-Manual/docs/specialThanks","docId":"specialThanks"}]},"docs":{"Fragment-Shader/ForwardAdd/RuntimeLight":{"id":"Fragment-Shader/ForwardAdd/RuntimeLight","title":"Runtime Light Layer","description":"here is where KXOwO controls how to interact with Realtime lights, and make things shiny (OwO)","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/External-Fresnel":{"id":"Fragment-Shader/ForwardBase/External-Fresnel","title":"External - Fresnel","description":"Basically saying, a Fresnel effect can make a mesh face facing away from or at you to be colored with a color","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/External-VectorColor":{"id":"Fragment-Shader/ForwardBase/External-VectorColor","title":"Externel - Vector Color","description":"the main concept is : the more the face facing at a specific direction (world space), to more it is going to get colored","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/General-Mask":{"id":"Fragment-Shader/ForwardBase/General-Mask","title":"Texture Layer : Mask Layer","description":"We use the Mask Layer to Cut out shapes based on the given texture","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/Glitter":{"id":"Fragment-Shader/ForwardBase/Glitter","title":"Glitter Layer","description":"in KXOwO, you can add a layer of Glitters to make your meshes go \\"blink blink OwO <3\\"","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/Lightmap":{"id":"Fragment-Shader/ForwardBase/Lightmap","title":"Lightmap Layer","description":"just... yeah. smack the Lightmap here.","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/Texture-Distort":{"id":"Fragment-Shader/ForwardBase/Texture-Distort","title":"Texture Layer : Distort Layer","description":"Here we are using a texture to distort the UV coordinate to read the Main texture (or the Albedo Layer).","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBase/Texture-Main":{"id":"Fragment-Shader/ForwardBase/Texture-Main","title":"Texture Layer : Albedo Layer / Main Layer","description":"The basic texture or albedo of the shader","sidebar":"tutorialSidebar"},"Fragment-Shader/ForwardBass-And-FowardAdd":{"id":"Fragment-Shader/ForwardBass-And-FowardAdd","title":"Fragment Shader Concept","description":"This shader uses both the ForwardBase Pass and ForwardAdd Pass","sidebar":"tutorialSidebar"},"Global-Concept/Color-Transform":{"id":"Global-Concept/Color-Transform","title":"Color Transform","description":"a Color Transform is refered to as a function such that it takes a color as an input, then outputs a color","sidebar":"tutorialSidebar"},"Global-Concept/Intro":{"id":"Global-Concept/Intro","title":"Global concept","description":"In this category, these concepts will be used throughout the entire shader, these little snippets/tools can be treated as a function through out the shader.","sidebar":"tutorialSidebar"},"Global-Concept/Reading-Textures":{"id":"Global-Concept/Reading-Textures","title":"Reading Textures","description":"In KXOwO, all the textures will be read with the same method that we will talk about in this page.","sidebar":"tutorialSidebar"},"Global-Concept/UV-Transforms-Basic":{"id":"Global-Concept/UV-Transforms-Basic","title":"UV Transform - Basics","description":"What is a UV Transform ?","sidebar":"tutorialSidebar"},"Global-Concept/UV-Transforms-Details":{"id":"Global-Concept/UV-Transforms-Details","title":"UV Transform - Details","description":"\\"Circle projections ? Line Collapse ? WTH are these ?\\"","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction to Kwazy Xhader OwO","description":"Kwazy Xhader OwO is both a Fragment Shader and a Vertex Shader used in Unity.","sidebar":"tutorialSidebar"},"specialThanks":{"id":"specialThanks","title":"Thank you so much","description":"without these amazing individuals or teams, KXOwO can never be this complex and amazing.","sidebar":"tutorialSidebar"},"Vertex-Shader/Axis-Distort":{"id":"Vertex-Shader/Axis-Distort","title":"Axis Distort","description":"based on a texture, the geometry of a mesh can be pushed/distorted along an axis.","sidebar":"tutorialSidebar"},"Vertex-Shader/Normal-Distort":{"id":"Vertex-Shader/Normal-Distort","title":"Normal Extwude / Normal Distort","description":"Almost the same as Axis Distort, but instead of pushing the vertices along an Object-spaced Axis, this time the vertices will be pushed along its normal vector","sidebar":"tutorialSidebar"}}}')}}]);