"use strict";(self.webpackChunkkx_ow_o_manual_website=self.webpackChunkkx_ow_o_manual_website||[]).push([[406],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),h=a,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||o;return r?n.createElement(m,i(i({ref:t},d),{},{components:r})):n.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8209:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},i="Axis Distort",s={unversionedId:"Vertex-Shader/Axis-Distort",id:"Vertex-Shader/Axis-Distort",title:"Axis Distort",description:"based on a texture, the geometry of a mesh can be pushed/distorted along an axis.",source:"@site/docs/03_Vertex-Shader/Axis-Distort.md",sourceDirName:"03_Vertex-Shader",slug:"/Vertex-Shader/Axis-Distort",permalink:"/KwazyXhaderOwO-Manual/docs/Vertex-Shader/Axis-Distort",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03_Vertex-Shader/Axis-Distort.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Vertex Shader Part",permalink:"/KwazyXhaderOwO-Manual/docs/category/vertex-shader-part"},next:{title:"Normal Extwude / Normal Distort",permalink:"/KwazyXhaderOwO-Manual/docs/Vertex-Shader/Normal-Distort"}},l={},c=[],d={toc:c},p="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"axis-distort"},"Axis Distort"),(0,a.kt)("p",null,"based on a texture, the geometry of a mesh can be pushed/distorted along an axis."),(0,a.kt)("p",null,'Another way to understand it is : "the vertices of na mesh can be pushed, and the distance being pushed for each vertex is based on the given texture"'),(0,a.kt)("admonition",{title:"another way to understand it  ",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"it is almost like the ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture-Distort layer")," back in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Fragment Shader - ForwardBase")," section, but instead of pushing UV coordinates, this time we are pushing vertices")),(0,a.kt)("admonition",{title:"World space or Local Space ?  ",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"the distort direction will be in ",(0,a.kt)("strong",{parentName:"p"},"local space"),"  ")),(0,a.kt)("p",null,"in KXOwO, there are 3 Axis Distort Layers, each of them will push the vertices along the object space X direction, Y direction, Z direction separately."),(0,a.kt)("p",null,"This is how they will look in Unity :"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(8195).Z,width:"498",height:"549"})),(0,a.kt)("h1",{id:"distwot-adjust--distort-adjust"},"Distwot Adjust / Distort Adjust"),(0,a.kt)("p",null,'since the pushing distance is not "center aligned", this means that the average mesh location is offset, the ',(0,a.kt)("inlineCode",{parentName:"p"},"Distort Adjust")," parameter is used to adjust the average location of the mesh"),(0,a.kt)("admonition",{title:"Example  ",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"let's say you have a texture ",(0,a.kt)("inlineCode",{parentName:"p"},"soil.png")," as your vertex Y axis distort texture, and you have the ",(0,a.kt)("inlineCode",{parentName:"p"},"Distwot Amount")," vector (0.2,0,0,0), this means thats the average location of the mesh is offset into the Y direction, you can use 0.1 to balance the offset if we want the mesh to be centered")),(0,a.kt)("admonition",{title:"it is actually still there  ",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Just because KXOwO is able to distort/push vertices of a mesh, this ",(0,a.kt)("strong",{parentName:"p"},"DOES NOT MEAN"),' that KXOwO can change a position/transform of a GameObject, the game object is still there, it is just the renderer being "tricked"')),(0,a.kt)("hr",null),(0,a.kt)("admonition",{title:"Example",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"you can use Axis Distort Y to make grass, the only thing to keep in mind is the resolution is not based on the texture only, it also requires a dense amount of vertices from the mesh")))}u.isMDXComponent=!0},8195:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Interface_08_VertexAxisDist-0bb0f25ec1d9de6da63f2d70e23da5d8.png"}}]);